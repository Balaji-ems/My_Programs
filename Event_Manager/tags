!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -I.$/;"	m
DEPS	Makefile	/^DEPS = event.h events.h global.h module.h$/;"	m
EVENT_FIVE	global.h	/^    EVENT_FIVE,$/;"	e	enum:Events
EVENT_FOUR	global.h	/^    EVENT_FOUR,$/;"	e	enum:Events
EVENT_ONE	global.h	/^    EVENT_ONE = 0,$/;"	e	enum:Events
EVENT_SEVEN	global.h	/^    EVENT_SEVEN,$/;"	e	enum:Events
EVENT_SIX	global.h	/^    EVENT_SIX,$/;"	e	enum:Events
EVENT_THREE	global.h	/^    EVENT_THREE,$/;"	e	enum:Events
EVENT_TWO	global.h	/^    EVENT_TWO,$/;"	e	enum:Events
Events	global.h	/^enum Events {$/;"	g
MAX	global.h	/^    MAX$/;"	e	enum:Events
OBJECTS	Makefile	/^OBJECTS = all_module.o event_manager.o main.o$/;"	m
_GLOBAL_H	global.h	3;"	d
array_pos	event_manager.c	/^int array_pos;$/;"	v
call_back_pointer	event_manager.c	/^	void (*call_back_pointer)(char *event_name);$/;"	m	struct:module_data	file:
check_bit	event_manager.c	5;"	d	file:
display_events	event_manager.c	/^void display_events(int event_number, char *event_name)$/;"	f
events	global.h	/^static char *events[] = {"Event one", "Event two", "Event three", "Event four",$/;"	v
init	all_module.c	/^void init(void)$/;"	f
interest	event_manager.c	/^	int interest;$/;"	m	struct:module_data	file:
main	main.c	/^int main(void)$/;"	f
module_data	event_manager.c	/^struct module_data {$/;"	s	file:
module_data	event_manager.c	/^} module_data[MAX];$/;"	v	typeref:struct:module_data
module_five	all_module.c	/^void module_five(void)$/;"	f
module_four	all_module.c	/^void module_four(void)$/;"	f
module_one	all_module.c	/^void module_one(void)$/;"	f
module_three	all_module.c	/^void module_three(void)$/;"	f
module_two	all_module.c	/^void module_two(void)$/;"	f
print_five	all_module.c	/^void print_five(char *event)$/;"	f
print_four	all_module.c	/^void print_four(char *event)$/;"	f
print_one	all_module.c	/^void print_one(char *event)$/;"	f
print_three	all_module.c	/^void print_three(char *event)$/;"	f
print_two	all_module.c	/^void print_two(char *event)$/;"	f
subscribe	event_manager.c	/^void subscribe(int data, void(*pointer)(char *))$/;"	f
