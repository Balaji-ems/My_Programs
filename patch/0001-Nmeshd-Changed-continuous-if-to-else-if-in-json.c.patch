From 97aae47b42473da1ab82a82bbd8975cd44a86037 Mon Sep 17 00:00:00 2001
From: Balaji Eswaramurthy <balaji.eswaramurthy@qubercomm.com>
Date: Tue, 5 Nov 2019 11:09:41 +0530
Subject: [PATCH] Nmeshd: Changed continuous if to else if in json.c

 In json object iteration a single key is compared with all possible
 keys.

 By using else if the number of comparison is reduced.
---
 cloudapd/cloudiface/json.c | 135 ++++++++++++++++++++++-----------------------
 1 file changed, 67 insertions(+), 68 deletions(-)

diff --git a/cloudapd/cloudiface/json.c b/cloudapd/cloudiface/json.c
index c2c1b5f..ffe3231 100644
--- a/cloudapd/cloudiface/json.c
+++ b/cloudapd/cloudiface/json.c
@@ -871,26 +871,25 @@ static void json_process_assoc_sta_list(struct mesh_peer_report *mpr, json_objec
 
 			if (!strcmp(key, MAC_ID))
 				mac_aton((char *)json_object_get_string(obj), sta->mac_address);
-			if (!strcmp(key, UPDT_HOST))
+			else if (!strcmp(key, UPDT_HOST))
 				strcpy(sta->hostname, json_object_get_string(obj));
-			if (!strcmp(key, ASSOC_STA_CAPAB))
+			else if (!strcmp(key, ASSOC_STA_CAPAB))
 				sta->capab = json_object_get_int(obj);
-			if (!strcmp(key, RSSI))
+			else if (!strcmp(key, RSSI))
 				sta->rssi = json_object_get_int(obj);
-			if (!strcmp(key, SSID)) {
+			else if (!strcmp(key, SSID)) {
 				strncpy((char *)sta->ssid, json_object_get_string(obj),
 						sizeof(sta->ssid));
 				sta->ssid_len = strlen(json_object_get_string(obj));
-			}
-			if (!strcmp(key, LOAD_REPORT_STA_TX_BYTES))
+			} else if (!strcmp(key, LOAD_REPORT_STA_TX_BYTES))
 				sta->tx_bytes = json_object_get_int64(obj);
-			if (!strcmp(key, LOAD_REPORT_STA_RX_BYTES))
+			else if (!strcmp(key, LOAD_REPORT_STA_RX_BYTES))
 				sta->rx_bytes = json_object_get_int64(obj);
-			if (!strcmp(key, STA_CTIME))
+			else if (!strcmp(key, STA_CTIME))
 				sta->conn_time = json_object_get_int(obj);
-			if (!strcmp(key, STA_HT))
+			else if (!strcmp(key, STA_HT))
 				sta->ht_nss = json_object_get_int(obj);
-			if (!strcmp(key, STA_VHT))
+			else if (!strcmp(key, STA_VHT))
 				sta->vht_nss = json_object_get_int(obj);
 		}
 		dl_list_add_tail(&mpr->assoc_sta_list, &sta->list);
@@ -930,9 +929,9 @@ static void json_process_track_sta_list(struct mesh_peer_report *mpr, json_objec
 
 			if (!strcmp(key, MAC_ID))
 				mac_aton((char *)json_object_get_string(obj), sta->mac_address);
-			if (!strcmp(key, CHANNEL))
+			else if (!strcmp(key, CHANNEL))
 				sta->channel = json_object_get_int(obj);
-			if (!strcmp(key, RSSI))
+			else if (!strcmp(key, RSSI))
 				sta->ssi_signal = json_object_get_int(obj);
 		}
 
@@ -958,33 +957,33 @@ static void json_process_steer_bss_list(struct capd_steer_bss *bss,
 
 		if (!strcmp(key, BSSID))
 			mac_aton((char *)json_object_get_string(obj), bss->bssid);
-		if (!strcmp(key, BAND))
+		else if (!strcmp(key, BAND))
 			bss->band = json_object_get_int(obj);
-		if (!strcmp(key, BSS_HOME_SCORE))
+		else if (!strcmp(key, BSS_HOME_SCORE))
 			bss->home_score = json_object_get_int(obj);
-		if (!strcmp(key, BSS_STEER_SCORE))
+		else if (!strcmp(key, BSS_STEER_SCORE))
 			bss->steer_score = json_object_get_int(obj);
-		if (!strcmp(key, BSS_STEER_TIME))
+		else if (!strcmp(key, BSS_STEER_TIME))
 			bss->steer_time = json_object_get_int(obj);
-		if (!strcmp(key, BSS_STEER_SUCCESS))
+		else if (!strcmp(key, BSS_STEER_SUCCESS))
 			bss->success = json_object_get_int(obj);
-		if (!strcmp(key, BSS_STEER_ATTEMPTS))
+		else if (!strcmp(key, BSS_STEER_ATTEMPTS))
 			bss->attempts = json_object_get_int(obj);
-		if (!strcmp(key, BSS_REJECT_UNSPEC))
+		else if (!strcmp(key, BSS_REJECT_UNSPEC))
 			bss->rej_unspec = json_object_get_int(obj);
-		if (!strcmp(key, BSS_REJECT_BEACON))
+		else if (!strcmp(key, BSS_REJECT_BEACON))
 			bss->rej_beacon = json_object_get_int(obj);
-		if (!strcmp(key, BSS_REJECT_CAPAB))
+		else if (!strcmp(key, BSS_REJECT_CAPAB))
 			bss->rej_capab = json_object_get_int(obj);
-		if (!strcmp(key, BSS_REJECT_UNDESIRED))
+		else if (!strcmp(key, BSS_REJECT_UNDESIRED))
 			bss->rej_undesired = json_object_get_int(obj);
-		if (!strcmp(key, BSS_REJECT_DELAY))
+		else if (!strcmp(key, BSS_REJECT_DELAY))
 			bss->rej_delay = json_object_get_int(obj);
-		if (!strcmp(key, BSS_REJECT_CANDIDATES))
+		else if (!strcmp(key, BSS_REJECT_CANDIDATES))
 			bss->rej_sta_candidate = json_object_get_int(obj);
-		if (!strcmp(key, BSS_REJECT_NO_SUITABLE))
+		else if (!strcmp(key, BSS_REJECT_NO_SUITABLE))
 			bss->rej_suit_candidate = json_object_get_int(obj);
-		if (!strcmp(key, BSS_REJECT_LEAVING))
+		else if (!strcmp(key, BSS_REJECT_LEAVING))
 			bss->rej_ess = json_object_get_int(obj);
 	}
 }
@@ -1018,10 +1017,10 @@ static void json_process_steer_sta_list(struct mesh_peer_report *mpr,
 
 			if (!strcmp(key, MAC_ID))
 				mac_aton((char *)json_object_get_string(obj), sta->mac_address);
-			if (!strcmp(key, STA_TOTAL_STEER))
+			else if (!strcmp(key, STA_TOTAL_STEER))
 				sta->total_nb = json_object_get_int(obj);
 
-			if (!strcmp(key, BSS_STEER_LIST)) {
+			else if (!strcmp(key, BSS_STEER_LIST)) {
 				len_bss = json_object_array_length(obj);
 
 				if (len_bss != 0) {
@@ -1086,16 +1085,16 @@ static void json_process_steer_sta_bss_list(struct mesh_sta_steer_report *mpr,
 
 			if (!strcmp(key, MAC_ID))
 				mac_aton((char *)json_object_get_string(obj), sta->mac_address);
-			if (!strcmp(key, MACADDRESS))
+			else if (!strcmp(key, MACADDRESS))
 				mac_aton((char *)json_object_get_string(obj), sta->connected_mac);
-			if (!strcmp(key, UPDT_HOST))
+			else if (!strcmp(key, UPDT_HOST))
 				strcpy(sta->hostname, json_object_get_string(obj));
-			if (!strcmp(key, STA_CTIME))
+			else if (!strcmp(key, STA_CTIME))
 				sta->conn_time = json_object_get_int(obj);
-			if (!strcmp(key, STA_TOTAL_STEER))
+			else if (!strcmp(key, STA_TOTAL_STEER))
 				sta->total_nb = json_object_get_int(obj);
 
-			if (!strcmp(key, BSS_STEER_LIST)) {
+			else if (!strcmp(key, BSS_STEER_LIST)) {
 				len_bss = json_object_array_length(obj);
 
 				if (len_bss != 0) {
@@ -1145,46 +1144,46 @@ static void json_mesh_parse_load_report(json_object *mobj, struct mesh_cmd *mesh
 
 		if (!strcmp(key, "bssid"))
 			mac_aton((char *)json_object_get_string(obj), mpr->bssid);
-		if (!strcmp(key, "antenna_count"))
+		else if (!strcmp(key, "antenna_count"))
 			mpr->antenna_count = json_object_get_int(obj);
-		if (!strcmp(key, "oper_band"))
+		else if (!strcmp(key, "oper_band"))
 			mpr->oper_band = json_object_get_int(obj);
-		if (!strcmp(key, "channel"))
+		else if (!strcmp(key, "channel"))
 			mpr->channel = json_object_get_int(obj);
-		if (!strcmp(key, "enable_11ac"))
+		else if (!strcmp(key, "enable_11ac"))
 			mpr->enable_11ac = json_object_get_int(obj);
-		if (!strcmp(key, "enable_11n"))
+		else if (!strcmp(key, "enable_11n"))
 			mpr->enable_11n = json_object_get_int(obj);
-		if (!strcmp(key, "width"))
+		else if (!strcmp(key, "width"))
 			mpr->width = json_object_get_int(obj);
-		if (!strcmp(key, "ch_type"))
+		else if (!strcmp(key, "ch_type"))
 			mpr->ch_type = json_object_get_int(obj);
-		if (!strcmp(key, "chan_ext_busy_time"))
+		else if (!strcmp(key, "chan_ext_busy_time"))
 			mpr->chan_ext_busy_time = json_object_get_int(obj);
-		if (!strcmp(key, "chan_free_time"))
+		else if (!strcmp(key, "chan_free_time"))
 			mpr->chan_free_time = json_object_get_int(obj);
-		if (!strcmp(key, "radio_free_time"))
+		else if (!strcmp(key, "radio_free_time"))
 			mpr->radio_free_time = json_object_get_int(obj);
-		if (!strcmp(key, "sta_count"))
+		else if (!strcmp(key, "sta_count"))
 			mpr->sta_count = json_object_get_int(obj);
-		if (!strcmp(key, "sta_steer_count"))
+		else if (!strcmp(key, "sta_steer_count"))
 			mpr->sta_steer_count = json_object_get_int(obj);
-		if (!strcmp(key, "vap_type"))
+		else if (!strcmp(key, "vap_type"))
 			mpr->type = json_object_get_int(obj);
-		if (!strcmp(key, "tx_bytes"))
+		else if (!strcmp(key, "tx_bytes"))
 			mpr->tx_bytes = json_object_get_int64(obj);
-		if (!strcmp(key, "rx_bytes"))
+		else if (!strcmp(key, "rx_bytes"))
 			mpr->rx_bytes = json_object_get_int64(obj);
-		if (!strcmp(key, "noise"))
+		else if (!strcmp(key, "noise"))
 			mpr->noise = json_object_get_int(obj);
 
-		if (!strcmp(key, CFG_TRACK_STA_LIST))
+		else if (!strcmp(key, CFG_TRACK_STA_LIST))
 			json_process_track_sta_list(mpr, obj);
 
-		if (!strcmp(key, STEER_STA_LIST))
+		else if (!strcmp(key, STEER_STA_LIST))
 			json_process_steer_sta_list(mpr, obj);
 
-		if (!strcmp(key, ASSOC_STA_LIST))
+		else if (!strcmp(key, ASSOC_STA_LIST))
 			json_process_assoc_sta_list(mpr, obj);
 	}
 }
@@ -1200,18 +1199,18 @@ static void json_mesh_parse_lb_cmd(json_object *obj, struct mesh_cmd *mesh)
 		if (!strcmp(key, MAC_ID))
 			mac_aton((char *)json_object_get_string(lb_obj),
 				 mp_lb_cmd->sta_mac);
-		if (!strcmp(key, BSSID))
+		else if (!strcmp(key, BSSID))
 			mac_aton((char *)json_object_get_string(lb_obj),
 				 mp_lb_cmd->bssid);
-		if (!strcmp(key, "op_class"))
+		else if (!strcmp(key, "op_class"))
 			mp_lb_cmd->op_class = json_object_get_int(lb_obj);
-		if (!strcmp(key, "phy_type"))
+		else if (!strcmp(key, "phy_type"))
 			mp_lb_cmd->ptype = json_object_get_int(lb_obj);
-		if (!strcmp(key, "channel"))
+		else if (!strcmp(key, "channel"))
 			mp_lb_cmd->channel = json_object_get_int(lb_obj);
-		if (!strcmp(key, BSS_HOME_SCORE))
+		else if (!strcmp(key, BSS_HOME_SCORE))
 			mp_lb_cmd->home_score = json_object_get_int(lb_obj);
-		if (!strcmp(key, BSS_STEER_SCORE))
+		else if (!strcmp(key, BSS_STEER_SCORE))
 			mp_lb_cmd->steer_score = json_object_get_int(lb_obj);
 	}
 }
@@ -1227,12 +1226,12 @@ static void json_mesh_parse_lb_cmd_status(json_object *obj, struct mesh_cmd *mes
 		if (!strcmp(key, MAC_ID))
 			mac_aton((char *)json_object_get_string(lb_obj),
 				 lb_cmd_status->sta_mac);
-		if (!strcmp(key, BSSID))
+		else if (!strcmp(key, BSSID))
 			mac_aton((char *)json_object_get_string(lb_obj),
 				 lb_cmd_status->bssid);
-		if (!strcmp(key, "status"))
+		else if (!strcmp(key, "status"))
 			lb_cmd_status->status = json_object_get_int(lb_obj);
-		if (!strcmp(key, "bss_resp"))
+		else if (!strcmp(key, "bss_resp"))
 			lb_cmd_status->bss_resp = json_object_get_int(lb_obj);
 	}
 }
@@ -1261,20 +1260,20 @@ static void json_mesh_parse_rrm_req_cmd(json_object *obj, struct mesh_cmd *mesh)
 				if (!strcmp(key, MAC_ID))
 					mac_aton((char *)json_object_get_string(sta_attr),
 						 req->sta_mac);
-				if (!strcmp(key, BSSID))
+				else if (!strcmp(key, BSSID))
 					mac_aton((char *)json_object_get_string(sta_attr),
 						 req->bssid);
-				if (!strcmp(key, MEASUREMENT_DURATION))
+				else if (!strcmp(key, MEASUREMENT_DURATION))
 					req->duration = json_object_get_int(sta_attr);
-				if (!strcmp(key, CHANNEL))
+				else if (!strcmp(key, CHANNEL))
 					req->channel = json_object_get_int(sta_attr);
-				if (!strcmp(key, OP_CLASS))
+				else if (!strcmp(key, OP_CLASS))
 					req->op_class = json_object_get_int(sta_attr);
-				if (!strcmp(key, MEASUREMENT_MODE))
+				else if (!strcmp(key, MEASUREMENT_MODE))
 					req->mode = json_object_get_int(sta_attr);
-				if (!strcmp(key, BAND_BALANCE))
+				else if (!strcmp(key, BAND_BALANCE))
 					req->bb = json_object_get_int(sta_attr);
-				if (!strcmp(key, SSID)) {
+				else if (!strcmp(key, SSID)) {
 					strncpy((char *)req->ssid, json_object_get_string(sta_attr),
 						sizeof(req->ssid));
 					req->ssid_len = strlen(json_object_get_string(sta_attr));
-- 
2.7.4

