From 86e9f813ed1a2d5f94c5832ca9e360c646394344 Mon Sep 17 00:00:00 2001
From: Balaji Eswaramurthy <balaji.eswaramurthy@qubercomm.com>
Date: Tue, 19 Nov 2019 18:13:05 +0530
Subject: [PATCH] Nmeshd: Memory leak fixes

 Fixed memory leaks.
---
 cloudapd/capd_local.c            |  4 +++-
 cloudapd/cloudiface/cloudiface.c |  8 ++------
 cloudapd/cloudiface/json.c       | 18 +++++++++++-------
 3 files changed, 16 insertions(+), 14 deletions(-)

diff --git a/cloudapd/capd_local.c b/cloudapd/capd_local.c
index 489b29b..0fb3cce 100644
--- a/cloudapd/capd_local.c
+++ b/cloudapd/capd_local.c
@@ -930,8 +930,10 @@ int capd_process_peer_sta_request(struct capd *capd, char *uid)
 
 	reply_str = json_handle_peer_sta_list_req(jobj, capd);
 
-	if (!reply_str)
+	if (!reply_str) {
+		json_object_put(jobj);
 		return -1;
+	}
 
 	snprintf(mesh_topic, sizeof(mesh_topic), "prod/mesh/nmeshd/%s", uid);
 	if (reply_str)
diff --git a/cloudapd/cloudiface/cloudiface.c b/cloudapd/cloudiface/cloudiface.c
index 691947b..f5c72ab 100644
--- a/cloudapd/cloudiface/cloudiface.c
+++ b/cloudapd/cloudiface/cloudiface.c
@@ -647,12 +647,6 @@ int cloud_mesh_send_sta_ip_resp_to_node(void *priv, struct dl_list *sta_ip_req_l
 	if (!obj)
 		return -1;
 
-	ip_obj = json_object_new_object();
-	if (!ip_obj) {
-		json_object_put(obj);
-		return -1;
-	}
-
 	strncpy(mesh_uid, uid, UID_LEN);
 
 	if (cfg == CFG_TYPE_CLOUD) {
@@ -685,6 +679,8 @@ int cloud_mesh_send_sta_ip_resp_to_node(void *priv, struct dl_list *sta_ip_req_l
 	str = json_object_to_json_string(jobj);
 	if (str)
 		ret = mqtt_publish(mqtt, ucast_msg_topic, str, strlen(str));
+	else
+		json_object_put(obj);
 
 	json_object_put(jobj);
 
diff --git a/cloudapd/cloudiface/json.c b/cloudapd/cloudiface/json.c
index 74d3a08..76ae18e 100644
--- a/cloudapd/cloudiface/json.c
+++ b/cloudapd/cloudiface/json.c
@@ -3001,17 +3001,19 @@ void json_construct_radio_config(json_object *radio_jobj, json_object *vobj, str
 	json_object_object_add(radio_jobj, CFG_NSS, json_object_new_int(antenna_cnt));
 
 	for (i = 0; i < rcfg->vap_cnt; i++) {
-		void *vap_jobj = json_object_new_object();
-
+		void *vap_jobj;
 		vcfg = &rcfg->vcfg[i];
-		json_object_object_add(vap_jobj, RADIO_INDEX, json_object_new_int(rindex));
-		json_object_object_add(vap_jobj, INTERFACE_INDEX, json_object_new_int(i));
-		json_object_object_add(vap_jobj, CFG_WIFI_TYPE, jstr);
-		json_construct_vap_config(vap_jobj, vcfg, bridge);
+
 #if defined(CAPD_AUTO_MESHCFG)
 		if (vcfg->type == VAP_TYPE_MESH && !auto_mesh)
 			continue;
 #endif
+		vap_jobj = json_object_new_object();
+
+		json_object_object_add(vap_jobj, RADIO_INDEX, json_object_new_int(rindex));
+		json_object_object_add(vap_jobj, INTERFACE_INDEX, json_object_new_int(i));
+		json_object_object_add(vap_jobj, CFG_WIFI_TYPE, jstr);
+		json_construct_vap_config(vap_jobj, vcfg, bridge);
 		if (vcfg->type == VAP_TYPE_MESH)
 			mesh_node = 1;
 		json_object_array_add(vobj, vap_jobj);
@@ -3812,8 +3814,10 @@ const char *json_handle_peer_sta_list_req(json_object *jobj, struct capd *capd)
 		json_object_object_add(uid_jobj, ASSOC_STA_LIST, sta_array);
 		json_object_array_add(uid_array, uid_jobj);
 	}
-	if (!json_object_array_length(uid_array))
+	if (!json_object_array_length(uid_array)) {
+		json_object_put(uid_array);
 		return NULL;
+	}
 	json_object_object_add(jobj, PEER_STA_LIST, uid_array);
 	jstr = json_object_to_json_string(jobj);
 	return jstr;
-- 
2.20.1

